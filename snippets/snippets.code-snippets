{
      //Synapse x specific
      //1: Environment functions
      "Get Player Instance": {
        "prefix": "GetPlayer",
        "body": [
          "GetPlayer(string)"
        ],
        "description": "Gets a player instance using a string. Arguments : (all/others/me/random/farthest/nearest/npcs/enemies/allies)"
      },
      "LocalPlayer": {
        "prefix": "LocalPlayer",
        "body": [
          "LocalPlayer"
        ],
        "description": "This is equals to game:GetService('Players').LocalPlayer"
      },
      "Get HumanoidRootPart": {
        "prefix": "GetRoot",
        "body": [
          "GetRoot(string)"
        ],
        "description": "This is like GetPlayer() but instead of a player instance it gets the HumanoidRootPart from Player.Character"
      },
      "Get Magnitude": {
        "prefix": "GetMagnitude()",
        "body": [
          "GetMagnitude(string, string)"
        ],
        "description": "Gets the magnitude distance from 2 players"
      },
      "Get Humanoid": {
        "prefix": "GetHumanoid",
        "body": [
          "GetHumanoid(string)"
        ],
        "description": "This is like GetPlayer() but instead of a player instance it gets the Humanoid from Player.Character"
      },
      "Get Command Environment": {
        "prefix": "GetCommandEnv",
        "body": [
          "GetCommandEnv(string)"
        ],
        "description": "Gets the environment of the first argument (command) and returns it"
      },
      "Get Scripts": {
        "prefix": "ProtectInstance",
        "body": [
          "ProtectInstance(Instance)"
        ],
        "description": "Protects the instance from any Index/ChildAdded/DescendantAdded/FindFirstChild/GetChildren methods"
      },
      "Replace Character": {
        "prefix": "ReplaceCharacter",
        "body": [
          "ReplaceCharacter()"
        ],
        "description": "Replaces your character (used in the 're' command)"
      },
      "Replace Humanoid": {
        "prefix": "ReplaceHumanoid",
        "body": [
          "ReplaceHumanoid()"
        ],
        "description": "Replaces your humanoid which can be used for attach methods"
      },
      "Get Correct Tool With Handle": {
        "prefix": "GetCorrectToolWithHandle",
        "body": [
          "GetCorrectToolWithHandle()"
        ],
        "description": "Finds a tool with a handle and remove all scripts/cameras/sounds"
      },
      "Disable Animations": {
        "prefix": "DisableAnimate",
        "body": [
          "DisableAnimate()"
        ],
        "description": "Disables all animations in your character"
      },
      "Spoof Instance": {
        "prefix": "SpoofInstance",
        "body": [
          "SpoofInstance(Instance, Instance)"
        ],
        "description": "Spoofs the first arg (Instance) to the second arg (Instance)"
      },
      "Spoof Property": {
        "prefix": "SpoofProperty",
        "body": [
          "SpoofProperty(Instance, string, any)"
        ],
        "description": "Spoofs the Instance's (first arg) Property (second arg) to return a value (3rd arg - optional). This also does not fire any .Changed or .GetPropertyChangedSignal events."
      },
      "Execute Command": {
        "prefix": "ExecuteCommand",
        "body": [
          "ExecuteCommand(string)"
        ],
        "description": "Executes a command"
      },
      "Is R6": {
        "prefix": "isR6",
        "body": [
          "isR6(string)"
        ],
        "description": "Returns true if the player haves RigType R6"
      },
      "Notify": {
        "prefix": "Notify",
        "body": [
          "Notify(Caller, string, string, number)"
        ],
        "description": "Makes a notification"
      },

      //2: AddConnection
      "Add Connection": {
        "prefix": "AddConnection",
        "body": [
          "AddConection(Instance.Connection:Connect(function() end));"
        ],
        "description": "Adds a connection"
      },
}
